# Myth Dark Pointed config for Starship
# (c) 2020 by Mick Hohmann, last changed 2020-10-22 23:08
# https://github.com/mickimnet/myth-prompt-themes

# Don't print a new line at the start of the prompt
add_newline = true

# Order of modules on prompt
format = """\
        (↓ Spacing line ↓)\
        [](bg:#464347 fg:#8FA700)\
        ${custom.directory_contents}\
        ${custom.directory_size}\

        $aws\
        $azure\
        $gcloud\
        $singularity\
        $kubernetes\
        $docker_context\

        (↓ Toolchain version modules ↓)\
        $crystal\
        $dart\
        $dotnet\
        $elixir\
        $elm\
        $erlang\
        $golang\
        $java\
        $julia\
        $nim\
        $nodejs\
        $ocaml\
        $perl\
        $php\
        $purescript\
        $python\
        $ruby\
        $rust\
        $swift\
        $terraform\
        $zig\
        (↑ Toolchain version modules ↑)\
        (↓ Package modules ↓)\
        $helm\
        $package\
        $cmake\
        $conda\
        [](fg:#464347)\
        $fill\

        (↑ Package modules ↑)\
        [](fg:#464347)\
        $nix_shell\
        $memory_usage\
        $env_var\
        ${custom.screen}\

        (↓ System state ↓)\
        $jobs\
        $shlvl\
        $battery\
        (↑ System state ↑)\

        $time\
        $line_break\

        (↓ Environment line ↓)\
        [](bg:#464347 fg:#8FA700)\
        $username\
        $sudo\
        $hostname\
        $localip\
        $directory\
        [](fg:#464347)\
        (↑ Environment line ↑)\
        $fill\
        [](fg:#464347)\
        [](bg:#464347 fg:#8FA700)\
        $line_break\

        (↓ Source control ↓)\
        [](bg:#464347 fg:#8FA700)\
        $hg_branch\
        $git_branch\
        $git_commit\
        $git_status\
        $git_state\
        ${custom.git_remote_url}\
        ${custom.git_last_commit_message}\
        [](fg:#464347)\
        (↑ Source control ↑)\

        $fill\
        (↓ Empty line end ↓)\
        [](fg:#464347)\
        $cmd_duration\
        [](bg:#464347 fg:#8FA700)\
        (↑ Empty line end ↑)\

        $line_break\
        (↓ Input line ↓)\
        [](bg:#464347 fg:#8FA700)\
        $status\
        $character\
        (↑ Input line ↑)\
    """
continuation_prompt = """\
        [](bg:#464347 fg:#8FA700)\
        [](bg:#8FA700 fg:#464347)\
        [](bg:#464347 fg:#8FA700)\
        [](fg:#464347)
"""

# Generic prompt configurations
[character]
success_symbol = "[[](bg:#8FA700 fg:#464347)](fg:#8FA700)"
error_symbol = "[[](bg:#ff3322 fg:#464347)](fg:#ff3322)"
vicmd_symbol = "[[](bg:#6f6a70 fg:#464347)[](bg:#464347 fg:#6f6a70)](bold bg:#6f6a70 fg:#ff3322)"
format = "$symbol "

[line_break]
disabled = false

# Module configurations
[azure]
disabled = false
format = '[[](bg:#4A35CC fg:#464347)$symbol$username(\($subscription\))[](bg:#464347 fg:#4A35CC)]($style)'
symbol = " "
style = "bg:#4A35CC fg:#EEEEEE"

[aws]
# disabled = true
symbol = " "
style = "bg:#EC912D"
format = '[[](bg:#EC912D fg:#464347)$symbol$profile(\($region\))[](bg:#464347 fg:#EC912D)]($style)'

[battery]
# disabled = true
full_symbol = "󰁹"
charging_symbol = "󰂄 "
discharging_symbol = "󱊢 "
unknown_symbol = "󱉝 "
empty_symbol = "󰂎"
format = "[[](fg:#FF5511 bg:#464347)$symbol$percentage[](fg:#464347 bg:#FF5511)]($style)"
[[battery.display]]
threshold = 10
style = "bold bg:#FF5511 fg:#EEEEEE"
[[battery.display]]
threshold = 99
style = "bg:#FF5511 fg:#111111"

[cmake]
# disabled = true
# symbol = "卑" # alternate
symbol = "󰦖"
style = "bg:#064F8D fg:#EEEEEE"
format = "[[](bg:#064F8D fg:#464347)$symbol$version[](bg:#464347 fg:#064F8D)]($style)"

[cmd_duration]
# disabled = true
style = "bg:#464347 fg:#FBDE2D"
min_time = 0# 2_000
show_milliseconds = true
show_notifications = false
min_time_to_notify = 45_000
format = "[  $duration ]($style)"

[conda]
# disabled = true
symbol = " "
style = "bg:#43B02A fg:#111111"
ignore_base = true
truncation_length = 1
format = "[[](bg:#43B02A fg:#464347)$symbol$environment[](bg:#464347 fg:#43B02A)]($style)"

[crystal]
# disabled = true
symbol = " "
style = "bg:#EEEEEE fg:#111111"
format = "[[](bg:#EEEEEE fg:#464347)$symbol$version[](bg:#464347 fg:#EEEEEE)]($style)"

[dart]
# disabled = true
symbol = " " # original
# symbol = "﯑ " # clearer
style = "bg:#32BBF9 fg:#111111"
format = "[[](bg:#32BBF9 fg:#464347)$symbol$version[](bg:#464347 fg:#32BBF9)]($style)"

[directory]
style = "italic bg:#6F6A70 fg:#EEEEEE"
read_only = ""
read_only_style = "bg:#ff3322 fg:#EEEEEE"
truncation_length = 4
truncate_to_repo = true
# truncation_symbol = "…"
# fish_style_pwd_dir_length = 3
format = "([[](bg:#ff3322 fg:#464347)$read_only[](bg:#464347 fg:#ff3322)]($read_only_style))[[](bg:#6F6A70 fg:#464347)$path[](bg:#464347 fg:#6F6A70)]($style)"

[directory.substitutions]
"~/Documents" = "󰈙"
"~/Music" = " "
"~/Movies" = "󱜏 "
"~/Pictures" = " "
"~/Sources" = " "
"~/source/repos" = " "
"~" = " "
"/" = "  "

[docker_context]
# disabled = true
symbol = " "
style = "bg:#3A91DC  fg:#EEEEEE"
only_with_files = true
format = "[[](bg:#3A91DC fg:#464347)$symbol$context[](bg:#464347 fg:#3A91DC)]($style)"

[dotnet]
# disabled = true
symbol = " "
style = "bg:#4A35CC fg:#EEEEEE"
heuristic = true
format = "[[](bg:#4A35CC fg:#464347)$symbol$version( 什$tfm)[](bg:#464347 fg:#4A35CC)]($style)"

[elixir]
# disabled = true
symbol = " "
style = "bg:#4E2A8E fg:#EEEEEE"
format = '[[](bg:#4E2A8E fg:#464347)$symbol$version \(OTP:$otp_version\)[](bg:#464347 fg:#4E2A8E)]($style)'

[elm]
# disabled = true
#symbol = " " # original
symbol = " " # clearer
style = "bg:#3E92D2 fg:#EEEEEE"
format = "[[](bg:#3E92D2 fg:#464347)$symbol$version[](bg:#464347 fg:#3E92D2)]($style)"

[env_var]
disabled = true
symbol = " "
style = "bg:#6f6a70 fg:#EEEEEE"
variable = "0"
default = "fish"
format = "([[](bg:#6f6a70 fg:#464347)$symbol$env_value[](bg:#464347 fg:#6f6a70)]($style))"

[erlang]
# disabled = true
symbol = " "
style = "bg:#8C032F fg:#EEEEEE"
format = "[[](bg:#8C032F fg:#464347)$symbol$version[](bg:#464347 fg:#8C032F)]($style)"

[gcloud]
# disabled = true
symbol = "☁️ "
style = "bg:#1A73E8 fg:#EEEEEE"
format = '[[](bg:#1A73E8 fg:#464347)$symbol$account(\($region\))[](bg:#464347 fg:#1A73E8)]($style)'

[git_branch]
# disabled = true
symbol = " "
# symbol = " " # alternate
style = "bg:#96ab5f fg:#111111"
# truncation_length = 4
# truncation_symbol = ""
format = "[[](bg:#96ab5f fg:#464347)$symbol$branch[](bg:#464347 fg:#96ab5f)]($style)"

[git_commit]
# disabled = true
tag_symbol = " "
style = "bg:#E58F73 fg:#111111"
commit_hash_length = 4
# only_detached = true
format = "[[](bg:#E58F73 fg:#464347)#$hash[](bg:#464347 fg:#E58F73)]($style)"

[git_state]
# disabled = true
style = "bg:#E0B25D fg:111111"
rebase = "rebasing"
merge = "merging"
revert = "reverting"
cherry_pick = " picking"
bisect = "bisecting"
am = "am'ing"
am_or_rebase = "am/rebase"
format = '\([[](bg:#E0B25D fg:#464347)$state($progress_current/$progress_total)[](bg:#464347 fg:#E0B25D)]($style)\)'

[git_status]
# disabled = true
style = "bg:#E0B25D fg:#000000"
stashed = "  ${count}"
ahead = "  ${count}"
behind = "  ${count}"
diverged = "   ${ahead_count} ${behind_count}"
conflicted = "  ${count}"
deleted = " ${count}"
renamed = "  ${count}"
modified = " 󰂮 ${count}"
staged = "  ${count}"
untracked = "  ${count}"
format = "([[](bg:#E0B25D fg:#464347)$stashed$staged$modified$renamed$untracked$deleted$conflicted$ahead_behind[](bg:#464347 fg:#E0B25D)]($style))"

[golang]
# disabled = true
symbol = " "
style = "bg:#7FD5EA fg:#111111"
format = "[[](bg:#7FD5EA fg:#464347)$symbol$version[](bg:#464347 fg:#7FD5EA)]($style)"

[helm]
# disabled = true
symbol = "󰷀 "
style = "bg:#0F1689 fg:#EEEEEE"
format = "[[](bg:#0F1689 fg:#464347)$symbol$version[](bg:#464347 fg:#0F1689)]($style)"

[hostname]
# disabled = true
style = "bg:#8FA700 fg:#111111"
ssh_only = false
trim_at = "."
format = "[[](bg:#8FA700 fg:#464347)($style)$hostname[](bg:#464347 fg:#8FA700)]($style)"

[localip]
ssh_only = false
style = "bg:#8FA700 fg:#111111"
format = "[[](bg:#8FA700 fg:#464347)($style)$localipv4[](bg:#464347 fg:#8FA700)]($style)"
disabled = false

[java]
# disabled = true
symbol = " "
style = "bg:#ED8B00 fg:#111111"
format = "[[](bg:#ED8B00 fg:#464347)$symbol$version[](bg:#464347 fg:#ED8B00)]($style)"

[jobs]
# disabled = true
symbol = "  "
style = "bold bg:#464347 fg:#FFA200"
symbol_threshold = 1
number_threshold = 1
format = "[$symbol$number ]($style)"

[julia]
# disabled = true
symbol = " "
style = "bg:#4063D8 fg:#EEEEEE"
format = "[[](bg:#4063D8 fg:#464347)$symbol$version[](bg:#464347 fg:#4063D8)]($style)"

[kubernetes]
disabled = false
symbol = "☸︎"
style = "bg:#3371E3 fg:#EEEEEE"
format = '[[](bg:#3371E3 fg:#464347)$symbol$context(\($namespace\))[](bg:#464347 fg:#3371E3)]($style)'

[memory_usage]
disabled = false
symbol = "󰍛 "
style = "bg:#BBBBBB fg:#111111"
threshold = 75
format = "([[](fg:#BBBBBB bg:#464347)$symbol$ram(:$swap)[](fg:#464347 bg:#BBBBBB)]($style))"

# Mercurial
[hg_branch]
disabled = false
symbol = " "
style = "bg:#96ab5f fg:#111111"
# truncation_length = 8 # default = 2^63 - 1
# truncation_symbol = "…"
format = "[[](bg:#96ab5f fg:#464347)$symbol$branch[](bg:#464347 fg:#96ab5f)]($style)"

[nim]
# disabled = true
symbol = " "
style = "bg:#FFE953 fg:#111111"
format = "[[](bg:#FFE953 fg:#464347)$symbol$version[](bg:#464347 fg:#FFE953)]($style)"

[nix_shell]
# disabled = true
symbol = " "
style = "bg:#27385D fg:#EEEEEE"
impure_msg = '[\(impure\)](bg:#27385D fg:#FF5511)'
pure_msg = '[\(pure\)](bg:#27385D fg:#8FA700)'
format = '[[](bg:#27385D fg:#464347)$symbol$name$state[](bg:#464347 fg:#27385D)]($style)'

[nodejs]
# disabled = true
# symbol = " "
symbol = "󰎙 "
style = "bg:#005F00 fg:#EEEEEE"
format = "[[](bg:#005F00 fg:#464347)$symbol$version[](bg:#464347 fg:#005F00)]($style)"

[ocaml]
# disabled = true
symbol = "🐫 "
style = "bg:#F48B32 fg:#111111"
format = "[[](bg:#F48B32 fg:#464347)$symbol$version[](bg:#464347 fg:#F48B32)]($style)"

[package]
# disabled = true
symbol = " "
style = "bg:#6F6A70 fg:#EEEEEE"
display_private = false
format = "[[](bg:#6F6A70 fg:#464347)$symbol$version[](bg:#464347 fg:#6F6A70)]($style)"

[perl]
# disabled = true
symbol = "🐪 "
style = "bg:#0073A1 fg:#EEEEEE"
format = "[[](bg:#0073A1 fg:#464347)$symbol$version[](bg:#464347 fg:#0073A1)]($style)"

[php]
# disabled = true
symbol = " "
style = "bg:#8892BF fg:#EEEEEE"
format = "[[](bg:#8892BF fg:#464347)$symbol$version[](bg:#464347 fg:#8892BF)]($style)"

[purescript]
# disabled = true
symbol = "<=>"
style = "bg:#1D222D fg:#EEEEEE"
format = "[[](bg:#1D222D fg:#464347)$symbol$version[](bg:#464347 fg:#1D222D)]($style)"

[python]
# disabled = true
symbol = " "
style = "bg:#EBD45B fg:#111111"
# pyenv_version_name = true
pyenv_prefix = "pyenv "
python_binary = "python3"
#scan_for_pyfiles = true
format = '[[](bg:#EBD45B fg:#464347)$symbol$pyenv_prefix$version(\($virtualenv\))[](bg:#464347 fg:#EBD45B)]($style)'

[ruby]
# disabled = true
symbol = " "
# symbol = " " # alternate
style = "bg:#CC342D fg:#EEEEEE"
format = "[[](bg:#CC342D fg:#464347)$symbol$version[](bg:#464347 fg:#CC342D)]($style)"

[rust]
# disabled = true
symbol = " "
# symbol = " " # alternate
style = "bg:#A72145 fg:#EEEEEE"
format = "[[](bg:#A72145 fg:#464347)$symbol$version[](bg:#464347 fg:#A72145)]($style)"

[shlvl]
# disabled = false
symbol = ""
style = "bold bg:#464347 fg:#FBDE2D"
threshold = 1
format = "[$symbol$shlvl ]($style)"
disabled = false

[singularity]
# disabled = true
symbol = "S"
style = "bg:#1D315F fg:#EEEEEE"
format = '[[](bg:#1D315F fg:#464347)$symbol\[$env\][](bg:#464347 fg:#1D315F)]($style)'

[sudo]
# style = "bg:#1D315F fg:#EEEEEE"
style = "bg:#F05138 fg:#EEEEEE"
symbol = '🧙'
# format = "[as $symbol]($style)"
format = '[[](bg:#F05138 fg:#464347)as $symbol[](bg:#464347 fg:#F05138)]($style)'
disabled = false

[swift]
# disabled = true
# symbol = "ﯣ "
symbol = " "
style = "bg:#F05138 fg:#EEEEEE"
format = "[[](bg:#F05138 fg:#464347)$symbol$version[](bg:#464347 fg:#F05138)]($style)"

[status]
disabled = false
symbol = ""
style = "bg:#464347 fg:#ff3322"
format = "[ $symbol$status]($style)"

[terraform]
disabled = false
symbol = "󱁢 "
style = "bg:#5836CD fg:#EEEEEE"
format = '[[](bg:#5836CD fg:#464347)$symbol\($workspace\)[](bg:#464347 fg:#5836CD)]($style)'
### uncomment the following, to see the version
# format = "[[](bg:#5836CD fg:#464347)$symbol$version($workspace)[](bg:#464347 fg:#5836CD)]($style)"

[time]
disabled = false
### color is set to orange, because of the configured time_range--to get your attention for e. g. R&R time ;)
style = "bg:#FFA200 fg:#111111"
use_12hr = false
time_format = "%F %T"
utc_time_offset = "local"
#time_range = "20:00:00-06:00:00"
format = "[[](fg:#FFA200 bg:#464347) $time[](fg:#464347 bg:#FFA200)]($style)[](bg:#464347 fg:#8FA700)"
# format = "[[](fg:#464347)[](fg:#FFA200 bg:#464347) $time[](fg:#464347 bg:#FFA200)]($style)[](bg:#464347 fg:#8FA700)"
#format = "[[](bg:#FFA200 fg:#464347) $time[](bg:#464347 fg:#FFA200)]($style)"

[username]
# disabled = true
show_always = true
style_root = "bold bg:#3388FF fg:#FF5511"
style_user = "bg:#3388FF fg:#EEEEEE"
#format = "[[](fg:#3388FF bg:#464347)$user[](bg:#464347 fg:#3388FF)]($style)"
format = "[[](bg:#3388FF fg:#464347)$user[](bg:#464347 fg:#3388FF)]($style)"

[zig]
# disabled = true
symbol = "［Z］"
# symbol = "↯ " # alternate
style = "bg:#F7A41D fg:#EEEEEE"
format = "[[](bg:#F7A41D fg:#464347)$symbol$version[](bg:#464347 fg:#F7A41D)]($style)"

[fill]
symbol = '-'

##### Custom commands

# Based on https://github.com/starship/starship/discussions/1252#discussioncomment-502146
[custom.git_last_commit_message]
description = "Display last commit message"
command = "git show -s --format='%s' | head -c 50"
#command = "git show -s --format='%h \"%s\"'"
when = 'git rev-parse --is-inside-work-tree 2> /dev/null'
#style = "bright-white bg:#7FBD32"
style = "bg:#6F6A70 fg:#EEEEEE"
#format = "[$output]($style) "
format = "[[](bg:#6F6A70 fg:#464347)$output[](bg:#464347 fg:#6F6A70)]($style)"

# Based on https://github.com/starship/starship/discussions/1252#discussioncomment-838901
[custom.git_remote_url]
description = 'Remote git repository'
when = 'git rev-parse --is-inside-work-tree'
command = '''
GIT_REMOTE=$(command git ls-remote --get-url 2> /dev/null)
GIT_REMOTE_URL=$(echo $GIT_REMOTE | sed -E '
# Remove protocol specifier and .git at the end
s/^\w+:\/\/(.+@)?//; s/\.git$//
# Remove port numbers (if present)
s/.+@(.+):([[:digit:]]+)\/(.+)$/\1\/\3/
# Leave only the host and path repo
s/.+@(.*):(.*)$/\1\/\2/; s/\/$//
# Remove host if known service
s/^github\.com\///
s/^gitlab\.com\///
s/^bitbucket\.org\///
')

if [[ "$GIT_REMOTE" =~ "github" ]]; then
    GIT_REMOTE_SYMBOL=" "
elif [[ "$GIT_REMOTE" =~ "gitlab" ]]; then
    GIT_REMOTE_SYMBOL=" "
elif [[ "$GIT_REMOTE" =~ "bitbucket" ]]; then
    GIT_REMOTE_SYMBOL=" "
elif [[ "$GIT_REMOTE" =~ "codecommit" ]]; then
    GIT_REMOTE_SYMBOL=" "
elif [[ -n "$GIT_REMOTE" ]]; then
    GIT_REMOTE_SYMBOL=" "
else
    GIT_REMOTE_SYMBOL=" "
fi
echo "$GIT_REMOTE_SYMBOL$GIT_REMOTE_URL"
'''
format = "[[](bg:#6F6A70 fg:#464347)$output[](bg:#464347 fg:#6F6A70)]($style)"
shell = [
    'bash',
    '--noprofile',
    '--norc',
]
style = "bg:#6F6A70 fg:#EEEEEE"

# https://github.com/starship/starship/discussions/1252#discussioncomment-558477
[custom.screen]
description = "Display a monitor glyph and the pid.tty.host if we're in a screen session."
when = """ test "$STY" """
shell = ["bash", "--noprofile", "--norc"]
command = 'echo 🖵 " $STY"'
# command = 'echo 🖵' # Alternative that excludes the pid.tty.host.

[custom.directory_contents]
description = "Display the number of files in the current directory"
when = """ true """
shell = ["bash", "--noprofile", "--norc"]
command = "echo $(/bin/ls -1A | /usr/bin/wc -l | sed 's: ::g') files"
format = "[[](bg:#8FA700 fg:#464347)($style)$output[](bg:#464347 fg:#8FA700)]($style)"
#format = "[[](bg:#4A35CC fg:#464347)($style)$output[](bg:#464347 fg:#4A35CC)]($style)"
style = "bg:#8FA700 fg:#111111"
#style = "bg:purple fg:#111111"
#style = "bg:#8FA700 fg:#111111"

[custom.directory_size]
description = "Display the combined size of all files in the current directory"
when = """ true """
shell = ["bash", "--noprofile", "--norc"]
command = "echo $(/bin/ls -lah | grep -m 1 total | sed 's/total //')"
format = "[[](bg:#8FA700 fg:#464347)($style)$output[](bg:#464347 fg:#8FA700)]($style)"
#format = "[[](bg:#4A35CC fg:#464347)($style)$output[](bg:#464347 fg:#4A35CC)]($style)"
style = "bg:#8FA700 fg:#111111"
#style = "bg:#4A35CC fg:#EEEEEE"

#EOF.
